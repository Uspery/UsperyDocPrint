@model UsperyDocPrint.Models.ReceiptResult

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"></link>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
        }

        #loading-spinner {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .spinner {
            border: 8px solid rgba(0, 0, 0, 0.1);
            border-top: 8px solid #3498db;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body class="bg-gray-100">

    @if (@Model.DisplaySaveOptions)
    {
        <div id="loading-spinner" style="display: none;">
            <div class="spinner"></div>
        </div>

        <div class="text-center my-4">
            <button onclick="generatePDF()" class="px-4 py-2 bg-orange-500 text-white font-semibold rounded shadow">
                Gerar PDF
            </button>
        </div>
    }

    <div class="content-to-print max-w-2xl mx-auto bg-white p-5 rounded-lg shadow-lg mt-4">
        <h1 id="receipt-title" class="text-3xl font-bold mb-5 text-center text-orange-600">Recibo de Pagamento - @Model.ReceiptInfo.Informacoes.Code</h1>

        <div class="mb-4">
            <h2 class="text-xl font-semibold mb-2 text-gray-700">Dados do recibo</h2>
            <div class="flex justify-between text-gray-600">
                <span>Data de emissão</span>
                <span>@Model.ReceiptInfo.Informacoes.Issuance.ToString("dd/MM/yyyy")</span>
            </div>
        </div>

        <div class="mb-4">
            <h2 class="text-xl font-semibold mb-2 text-gray-700">Dados do pagador</h2>
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <span class="block font-medium text-gray-600">Nome</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Payer.Name</span>
                </div>
                <div>
                    <span class="block font-medium text-gray-600">CPF/CNPJ</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Payer.Document</span>
                </div>
            </div>
        </div>

        <div class="mb-2">
            <h2 class="text-xl font-semibold mb-2 text-gray-700">Dados do beneficiário</h2>
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <span class="block font-medium text-gray-600">Nome</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Receiver.Name</span>
                </div>
                <div>
                    <span class="block font-medium text-gray-600">CPF/CNPJ</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Receiver.Document</span>
                </div>
                <div>
                    <span class="block font-medium text-gray-600">Cidade</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Receiver.City</span>
                </div>
                <div>
                    <span class="block font-medium text-gray-600">Rua</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Receiver.Street</span>
                </div>
                <div>
                    <span class="block font-medium text-gray-600">Complemento</span>
                    <span class="text-gray-800">@Model.ReceiptInfo.Receiver.Complement</span>
                </div>
            </div>
        </div>

        <div class="mb-4">
            <h2 class="text-xl font-semibold mb-2 text-gray-700">Serviço/Produto</h2>
            @foreach (var item in Model.ReceiptInfo.Items)
            {
                <div class="flex justify-between text-gray-600">
                    <span>@item.Service</span>
                    <span>R$ @item.Value.ToString("N2")</span>
                </div>
            }
        </div>

        <div class="mb-4">
            <h2 class="text-xl font-semibold mb-4 text-gray-700">Valor total: <span class="text-gray-800" style="color: #FF8A00;">R$ @Model.ReceiptInfo.Items.Sum(i => Convert.ToDecimal(i.Value)).ToString("N2")</span></h2>
        </div>

        <div class="mb-4">
            <h2 class="text-xl font-semibold mb-2 text-gray-700">Observação</h2>
            <p class="text-gray-800" style="word-wrap: break-word; overflow-wrap: break-word;">
                @Model.ReceiptInfo.Informacoes.Observations
            </p>
        </div>

        <div class="text-sm text-gray-600 mb-4">
            <p>Para maior clareza, firmamos o presente recibo gerado em @Model.ReceiptInfo.Informacoes.Issuance.ToString("dd/MM/yyyy"), que comprova o recebimento integral do valor mencionado, concedendo quitação plena, geral e irrevogável pela quantia recebida.</p>
        </div>

        <div class="text-center text-sm text-gray-600">
            <p>@Model.ReceiptInfo.Receiver.Name - @Model.ReceiptInfo.Receiver.Document</p>
            <p>Recibo gerado por <span class="text-orange-500">@Model.AppName</span></p>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
    <script>
        function generatePDF() {
            // Seleciona o conteúdo do body, exceto o botão
            const element = document.querySelector('.content-to-print');

            // Pega o texto do h1 com o id "receipt-title" para usar como nome do arquivo
            const title = document.getElementById('receipt-title').textContent.trim();

            // Exibe o spinner de loading
            document.getElementById('loading-spinner').style.display = 'flex';

            // Configurações para gerar o PDF
            const options = {
                filename: `${title}.pdf`,  // Usa o título do recibo como nome do arquivo
                jsPDF: { unit: 'pt', format: 'a4', orientation: 'portrait' },
                DisablePdfCompression: 1,
                html2canvas: {
                    scale: 6, // Aumenta a escala para uma renderização mais nítida
                    logging: true, // Para debugar se necessário
                    letterRendering: true // Melhor qualidade na renderização de texto
                }
            };

            // Gera e baixa o PDF
            html2pdf().from(element).set(options).save()
                .then(() => {
                    // Oculta o spinner quando o PDF for gerado
                    document.getElementById('loading-spinner').style.display = 'none';
                })
                .catch((error) => {
                    console.error('Erro ao gerar o PDF:', error);
                    // Oculta o spinner se houver erro
                    document.getElementById('loading-spinner').style.display = 'none';
                });
        }


    </script>
</body>
</html>
